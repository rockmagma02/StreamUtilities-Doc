{"interfaceLanguages":{"swift":[{"children":[{"title":"Supporting Types","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/bidirectionalstream\/nonetype\/init()","title":"init()","type":"init"}],"path":"\/documentation\/bidirectionalstream\/nonetype","title":"NoneType","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bidirectionalstream\/stopiteration\/value","title":"var value: ReturnT","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bidirectionalstream\/stopiteration\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/bidirectionalstream\/stopiteration\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/bidirectionalstream\/stopiteration","title":"StopIteration","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bidirectionalstream\/terminated\/columnnumber","title":"var columnNumber: Int","type":"property"},{"path":"\/documentation\/bidirectionalstream\/terminated\/error","title":"var error: any Error","type":"property"},{"path":"\/documentation\/bidirectionalstream\/terminated\/filename","title":"var fileName: String","type":"property"},{"path":"\/documentation\/bidirectionalstream\/terminated\/functionname","title":"var functionName: String","type":"property"},{"path":"\/documentation\/bidirectionalstream\/terminated\/linenumber","title":"var lineNumber: Int","type":"property"},{"path":"\/documentation\/bidirectionalstream\/terminated\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/bidirectionalstream\/terminated","title":"Terminated","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bidirectionalstream\/wrongstreamuse\/message","title":"var message: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bidirectionalstream\/wrongstreamuse\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/bidirectionalstream\/wrongstreamuse\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/bidirectionalstream\/wrongstreamuse","title":"WrongStreamUse","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/bidirectionalstream\/asyncsemaphore\/init(value:)","title":"init(value: Int)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bidirectionalstream\/asyncsemaphore\/signal()","title":"func signal() async","type":"method"},{"path":"\/documentation\/bidirectionalstream\/asyncsemaphore\/wait()","title":"func wait() async","type":"method"},{"path":"\/documentation\/bidirectionalstream\/asyncsemaphore\/wait(timeout:)","title":"func wait(timeout: DispatchTime) async -> DispatchTimeoutResult","type":"method"},{"path":"\/documentation\/bidirectionalstream\/asyncsemaphore\/wait(walltimeout:)","title":"func wait(wallTimeout: DispatchWallTime) async -> DispatchTimeoutResult","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bidirectionalstream\/asyncsemaphore\/assertisolated(_:file:line:)","title":"func assertIsolated(() -> String, file: StaticString, line: UInt)","type":"method"},{"path":"\/documentation\/bidirectionalstream\/asyncsemaphore\/assumeisolated(_:file:line:)","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","type":"method"},{"path":"\/documentation\/bidirectionalstream\/asyncsemaphore\/preconditionisolated(_:file:line:)","title":"func preconditionIsolated(() -> String, file: StaticString, line: UInt)","type":"method"}],"path":"\/documentation\/bidirectionalstream\/asyncsemaphore\/actor-implementations","title":"Actor Implementations","type":"symbol"}],"path":"\/documentation\/bidirectionalstream\/asyncsemaphore","title":"AsyncSemaphore","type":"class"},{"title":"BidirectionalStream","type":"groupMarker"},{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bidirectionalstream\/bidirectionalsyncstream\/continuation\/return(_:)","title":"func `return`(ReturnT)","type":"method"},{"path":"\/documentation\/bidirectionalstream\/bidirectionalsyncstream\/continuation\/throw(error:filename:functionname:linenumber:columnnumber:)","title":"func `throw`(error: any Error, fileName: String, functionName: String, lineNumber: Int, columnNumber: Int)","type":"method"},{"path":"\/documentation\/bidirectionalstream\/bidirectionalsyncstream\/continuation\/yield(_:)","title":"func yield(YieldT) -> SendT","type":"method"}],"path":"\/documentation\/bidirectionalstream\/bidirectionalsyncstream\/continuation","title":"BidirectionalSyncStream.Continuation","type":"class"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/bidirectionalstream\/bidirectionalsyncstream\/init(_:_:_:_:)","title":"init(YieldT.Type, SendT.Type, ReturnT.Type, (BidirectionalSyncStream<YieldT, SendT, ReturnT>.Continuation) -> Void)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bidirectionalstream\/bidirectionalsyncstream\/next()","title":"func next() throws -> YieldT","type":"method"},{"path":"\/documentation\/bidirectionalstream\/bidirectionalsyncstream\/send(_:)","title":"func send(SendT) throws -> YieldT","type":"method"},{"path":"\/documentation\/bidirectionalstream\/bidirectionalsyncstream\/tosyncstream()","title":"func toSyncStream() -> SyncStream<YieldT>","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/bidirectionalstream\/bidirectionalsyncstream\/makestream(_:_:_:)","title":"static func makeStream(YieldT.Type, SendT.Type, ReturnT.Type) -> (stream: BidirectionalSyncStream<YieldT, SendT, ReturnT>, continuation: BidirectionalSyncStream<YieldT, SendT, ReturnT>.Continuation)","type":"method"}],"path":"\/documentation\/bidirectionalstream\/bidirectionalsyncstream","title":"BidirectionalSyncStream","type":"class"},{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bidirectionalstream\/bidirectionalasyncstream\/continuation\/return(_:)","title":"func `return`(ReturnT) async","type":"method"},{"path":"\/documentation\/bidirectionalstream\/bidirectionalasyncstream\/continuation\/throw(error:filename:functionname:linenumber:columnnumber:)","title":"func `throw`(error: any Error, fileName: String, functionName: String, lineNumber: Int, columnNumber: Int) async","type":"method"},{"path":"\/documentation\/bidirectionalstream\/bidirectionalasyncstream\/continuation\/yield(_:)","title":"func yield(YieldT) async -> SendT","type":"method"}],"path":"\/documentation\/bidirectionalstream\/bidirectionalasyncstream\/continuation","title":"BidirectionalAsyncStream.Continuation","type":"class"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/bidirectionalstream\/bidirectionalasyncstream\/init(_:_:_:_:)","title":"init(YieldT.Type, SendT.Type, ReturnT.Type, (BidirectionalAsyncStream<YieldT, SendT, ReturnT>.Continuation) async -> Void)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bidirectionalstream\/bidirectionalasyncstream\/next()","title":"func next() async throws -> YieldT","type":"method"},{"path":"\/documentation\/bidirectionalstream\/bidirectionalasyncstream\/send(_:)","title":"func send(SendT) async throws -> YieldT","type":"method"},{"path":"\/documentation\/bidirectionalstream\/bidirectionalasyncstream\/toasyncstream()","title":"func toAsyncStream() async -> AsyncStream<YieldT>","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/bidirectionalstream\/bidirectionalasyncstream\/makestream(_:_:_:)","title":"static func makeStream(YieldT.Type, SendT.Type, ReturnT.Type) -> (stream: BidirectionalAsyncStream<YieldT, SendT, ReturnT>, continuation: BidirectionalAsyncStream<YieldT, SendT, ReturnT>.Continuation)","type":"method"}],"path":"\/documentation\/bidirectionalstream\/bidirectionalasyncstream","title":"BidirectionalAsyncStream","type":"class"}],"path":"\/documentation\/bidirectionalstream","title":"BidirectionalStream","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":1}}