{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"makeStream"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"YieldT"},{"kind":"text","text":".Type = YieldT.self, "},{"kind":"externalParam","text":"_"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SendT"},{"kind":"text","text":".Type = SendT.self, "},{"kind":"externalParam","text":"_"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ReturnT"},{"kind":"text","text":".Type = ReturnT.self) -> (stream"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/BidirectionalStream\/documentation\/BidirectionalStream\/BidirectionalAsyncStream","preciseIdentifier":"s:19BidirectionalStream0a5AsyncB0C","text":"BidirectionalAsyncStream"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"YieldT"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"SendT"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"ReturnT"},{"kind":"text","text":">, continuation"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/BidirectionalStream\/documentation\/BidirectionalStream\/BidirectionalAsyncStream","preciseIdentifier":"s:19BidirectionalStream0a5AsyncB0C","text":"BidirectionalAsyncStream"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"YieldT"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"SendT"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"ReturnT"},{"kind":"text","text":">."},{"kind":"typeIdentifier","identifier":"doc:\/\/BidirectionalStream\/documentation\/BidirectionalStream\/BidirectionalAsyncStream\/Continuation","preciseIdentifier":"s:19BidirectionalStream0a5AsyncB0C12ContinuationC","text":"Continuation"},{"kind":"text","text":")"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"return-value","level":2,"type":"heading","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A tuple containing the stream and its continuation. The continuation"},{"type":"text","text":" "},{"type":"text","text":"should be passed to the producer while the stream should be passed to the consumer."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/bidirectionalstream\/bidirectionalasyncstream\/makestream(_:_:_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/BidirectionalStream\/documentation\/BidirectionalStream\/BidirectionalAsyncStream\/makeStream(_:_:_:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Constructs an Bidirectional asynchronous stream from the Element Type"}],"kind":"symbol","metadata":{"role":"symbol","title":"makeStream(_:_:_:)","roleHeading":"Type Method","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"makeStream"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"YieldT"},{"kind":"text","text":".Type, "},{"kind":"typeIdentifier","text":"SendT"},{"kind":"text","text":".Type, "},{"kind":"typeIdentifier","text":"ReturnT"},{"kind":"text","text":".Type) -> (stream"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"BidirectionalAsyncStream","preciseIdentifier":"s:19BidirectionalStream0a5AsyncB0C"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"YieldT"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"SendT"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"ReturnT"},{"kind":"text","text":">, continuation"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"BidirectionalAsyncStream","preciseIdentifier":"s:19BidirectionalStream0a5AsyncB0C"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"YieldT"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"SendT"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"ReturnT"},{"kind":"text","text":">."},{"kind":"typeIdentifier","text":"Continuation","preciseIdentifier":"s:19BidirectionalStream0a5AsyncB0C12ContinuationC"},{"kind":"text","text":")"}],"symbolKind":"method","externalID":"s:19BidirectionalStream0a5AsyncB0C04makeB0yACyxq_q0_G6stream_AC12ContinuationCyxq_q0__G12continuationtxm_q_mq0_mtFZ","extendedModule":"BidirectionalStream","modules":[{"name":"BidirectionalStream"}]},"hierarchy":{"paths":[["doc:\/\/BidirectionalStream\/documentation\/BidirectionalStream","doc:\/\/BidirectionalStream\/documentation\/BidirectionalStream\/BidirectionalAsyncStream"]]},"references":{"doc://BidirectionalStream/documentation/BidirectionalStream/BidirectionalAsyncStream/makeStream(_:_:_:)":{"role":"symbol","title":"makeStream(_:_:_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"makeStream"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"YieldT"},{"kind":"text","text":".Type, "},{"kind":"typeIdentifier","text":"SendT"},{"kind":"text","text":".Type, "},{"kind":"typeIdentifier","text":"ReturnT"},{"kind":"text","text":".Type) -> (stream"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"BidirectionalAsyncStream","preciseIdentifier":"s:19BidirectionalStream0a5AsyncB0C"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"YieldT"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"SendT"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"ReturnT"},{"kind":"text","text":">, continuation"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"BidirectionalAsyncStream","preciseIdentifier":"s:19BidirectionalStream0a5AsyncB0C"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"YieldT"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"SendT"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"ReturnT"},{"kind":"text","text":">."},{"kind":"typeIdentifier","text":"Continuation","preciseIdentifier":"s:19BidirectionalStream0a5AsyncB0C12ContinuationC"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Constructs an Bidirectional asynchronous stream from the Element Type"}],"identifier":"doc:\/\/BidirectionalStream\/documentation\/BidirectionalStream\/BidirectionalAsyncStream\/makeStream(_:_:_:)","kind":"symbol","type":"topic","url":"\/documentation\/bidirectionalstream\/bidirectionalasyncstream\/makestream(_:_:_:)"},"doc://BidirectionalStream/documentation/BidirectionalStream":{"role":"collection","title":"BidirectionalStream","abstract":[{"type":"codeVoice","code":"BidirectionalStream"},{"type":"text","text":" aims to bring features similar to Python’s Generator to Swift. Users can generate values using "},{"type":"codeVoice","code":"yield"},{"type":"text","text":", send values back with "},{"type":"codeVoice","code":"send"},{"type":"text","text":", and close the stream by throwing a "},{"type":"codeVoice","code":"StopIteration"},{"type":"text","text":" error."}],"identifier":"doc:\/\/BidirectionalStream\/documentation\/BidirectionalStream","kind":"symbol","type":"topic","url":"\/documentation\/bidirectionalstream"},"doc://BidirectionalStream/documentation/BidirectionalStream/BidirectionalAsyncStream":{"role":"symbol","title":"BidirectionalAsyncStream","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"BidirectionalAsyncStream"}],"abstract":[{"type":"text","text":"A mechanism inspired by Python’s generator to allow for bidirectional communication between two"},{"type":"text","text":" "},{"type":"text","text":"parties. One party can yield a value and the other party can send a value back."}],"identifier":"doc:\/\/BidirectionalStream\/documentation\/BidirectionalStream\/BidirectionalAsyncStream","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"BidirectionalAsyncStream"}],"url":"\/documentation\/bidirectionalstream\/bidirectionalasyncstream"},"doc://BidirectionalStream/documentation/BidirectionalStream/BidirectionalAsyncStream/Continuation":{"role":"symbol","title":"BidirectionalAsyncStream.Continuation","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Continuation"}],"abstract":[{"type":"text","text":"A continuation of the "},{"type":"codeVoice","code":"BidirectionalAsyncStream"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"It is used to communicate between the two parties."}],"identifier":"doc:\/\/BidirectionalStream\/documentation\/BidirectionalStream\/BidirectionalAsyncStream\/Continuation","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Continuation"}],"url":"\/documentation\/bidirectionalstream\/bidirectionalasyncstream\/continuation"}}}