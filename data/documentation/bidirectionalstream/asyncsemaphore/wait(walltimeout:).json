{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"wait"},{"kind":"text","text":"("},{"kind":"externalParam","text":"wallTimeout"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"DispatchWallTime","preciseIdentifier":"s:8Dispatch0A8WallTimeV"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"DispatchTimeoutResult","preciseIdentifier":"s:8Dispatch0A13TimeoutResultO"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"name":"wallTimeout","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The wall timeout value."}]}]}]},{"kind":"content","content":[{"anchor":"return-value","level":2,"type":"heading","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A "},{"type":"codeVoice","code":"DispatchTimeoutResult"},{"type":"text","text":" indicating whether the wait operation timed out or not."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/bidirectionalstream\/asyncsemaphore\/wait(walltimeout:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/BidirectionalStream\/documentation\/BidirectionalStream\/AsyncSemaphore\/wait(wallTimeout:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Waits(decrements) the semaphore with a wall timeout, blocking the current task if necessary."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"wait"},{"kind":"text","text":"("},{"kind":"externalParam","text":"wallTimeout"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"DispatchWallTime","preciseIdentifier":"s:8Dispatch0A8WallTimeV"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"DispatchTimeoutResult","preciseIdentifier":"s:8Dispatch0A13TimeoutResultO"}],"title":"wait(wallTimeout:)","roleHeading":"Instance Method","role":"symbol","symbolKind":"method","externalID":"s:19BidirectionalStream14AsyncSemaphoreC4wait11wallTimeout8Dispatch0hG6ResultOAF0H8WallTimeV_tYaF","modules":[{"name":"BidirectionalStream"}]},"hierarchy":{"paths":[["doc:\/\/BidirectionalStream\/documentation\/BidirectionalStream","doc:\/\/BidirectionalStream\/documentation\/BidirectionalStream\/AsyncSemaphore"]]},"references":{"doc://BidirectionalStream/documentation/BidirectionalStream/AsyncSemaphore":{"role":"symbol","title":"AsyncSemaphore","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncSemaphore"}],"abstract":[{"type":"text","text":"An object that is similar to the "},{"type":"codeVoice","code":"DispatchSemaphore"},{"type":"text","text":" form the "},{"type":"codeVoice","code":"Dispatch"},{"type":"text","text":" package,"},{"type":"text","text":" "},{"type":"text","text":"but it is designed to be used in an asynchronous context."}],"identifier":"doc:\/\/BidirectionalStream\/documentation\/BidirectionalStream\/AsyncSemaphore","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AsyncSemaphore"}],"url":"\/documentation\/bidirectionalstream\/asyncsemaphore"},"doc://BidirectionalStream/documentation/BidirectionalStream/AsyncSemaphore/wait(wallTimeout:)":{"role":"symbol","title":"wait(wallTimeout:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"wait"},{"kind":"text","text":"("},{"kind":"externalParam","text":"wallTimeout"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"DispatchWallTime","preciseIdentifier":"s:8Dispatch0A8WallTimeV"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"DispatchTimeoutResult","preciseIdentifier":"s:8Dispatch0A13TimeoutResultO"}],"abstract":[{"type":"text","text":"Waits(decrements) the semaphore with a wall timeout, blocking the current task if necessary."}],"identifier":"doc:\/\/BidirectionalStream\/documentation\/BidirectionalStream\/AsyncSemaphore\/wait(wallTimeout:)","kind":"symbol","type":"topic","url":"\/documentation\/bidirectionalstream\/asyncsemaphore\/wait(walltimeout:)"},"doc://BidirectionalStream/documentation/BidirectionalStream":{"role":"collection","title":"BidirectionalStream","abstract":[{"type":"codeVoice","code":"BidirectionalStream"},{"type":"text","text":" aims to bring features similar to Pythonâ€™s Generator to Swift. Users can generate values using "},{"type":"codeVoice","code":"yield"},{"type":"text","text":", send values back with "},{"type":"codeVoice","code":"send"},{"type":"text","text":", and close the stream by throwing a "},{"type":"codeVoice","code":"StopIteration"},{"type":"text","text":" error."}],"identifier":"doc:\/\/BidirectionalStream\/documentation\/BidirectionalStream","kind":"symbol","type":"topic","url":"\/documentation\/bidirectionalstream"}}}