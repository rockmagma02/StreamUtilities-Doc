{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Continuation"}],"languages":["swift"],"platforms":["macOS"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/bidirectionalstream\/bidirectionalsyncstream\/continuation"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/BidirectionalStream\/documentation\/BidirectionalStream\/BidirectionalSyncStream\/Continuation","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"A continuation of the "},{"type":"codeVoice","code":"BidirectionalSyncStream"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"It is used to communicate between the two parties."}],"kind":"symbol","metadata":{"navigatorTitle":[{"kind":"identifier","text":"Continuation"}],"role":"symbol","title":"BidirectionalSyncStream.Continuation","roleHeading":"Class","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Continuation"}],"symbolKind":"class","externalID":"s:19BidirectionalStream0a4SyncB0C12ContinuationC","extendedModule":"BidirectionalStream","modules":[{"name":"BidirectionalStream"}]},"hierarchy":{"paths":[["doc:\/\/BidirectionalStream\/documentation\/BidirectionalStream","doc:\/\/BidirectionalStream\/documentation\/BidirectionalStream\/BidirectionalSyncStream"]]},"topicSections":[{"title":"Instance Methods","identifiers":["doc:\/\/BidirectionalStream\/documentation\/BidirectionalStream\/BidirectionalSyncStream\/Continuation\/return(_:)","doc:\/\/BidirectionalStream\/documentation\/BidirectionalStream\/BidirectionalSyncStream\/Continuation\/throw(error:fileName:functionName:lineNumber:columnNumber:)","doc:\/\/BidirectionalStream\/documentation\/BidirectionalStream\/BidirectionalSyncStream\/Continuation\/yield(_:)"]}],"references":{"doc://BidirectionalStream/documentation/BidirectionalStream/BidirectionalSyncStream/Continuation":{"role":"symbol","title":"BidirectionalSyncStream.Continuation","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Continuation"}],"abstract":[{"type":"text","text":"A continuation of the "},{"type":"codeVoice","code":"BidirectionalSyncStream"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"It is used to communicate between the two parties."}],"identifier":"doc:\/\/BidirectionalStream\/documentation\/BidirectionalStream\/BidirectionalSyncStream\/Continuation","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Continuation"}],"url":"\/documentation\/bidirectionalstream\/bidirectionalsyncstream\/continuation"},"doc://BidirectionalStream/documentation/BidirectionalStream/BidirectionalSyncStream/Continuation/yield(_:)":{"role":"symbol","title":"yield(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"yield"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"YieldT"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"SendT"}],"abstract":[{"type":"text","text":"Yields a value to the stream and waits for a value to be sent back."}],"identifier":"doc:\/\/BidirectionalStream\/documentation\/BidirectionalStream\/BidirectionalSyncStream\/Continuation\/yield(_:)","kind":"symbol","type":"topic","url":"\/documentation\/bidirectionalstream\/bidirectionalsyncstream\/continuation\/yield(_:)"},"doc://BidirectionalStream/documentation/BidirectionalStream/BidirectionalSyncStream":{"role":"symbol","title":"BidirectionalSyncStream","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"BidirectionalSyncStream"}],"abstract":[{"type":"text","text":"A mechanism inspired by Python’s generator to allow for bidirectional communication between two"},{"type":"text","text":" "},{"type":"text","text":"parties. One party can yield a value and the other party can send a value back."}],"identifier":"doc:\/\/BidirectionalStream\/documentation\/BidirectionalStream\/BidirectionalSyncStream","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"BidirectionalSyncStream"}],"url":"\/documentation\/bidirectionalstream\/bidirectionalsyncstream"},"doc://BidirectionalStream/documentation/BidirectionalStream":{"role":"collection","title":"BidirectionalStream","abstract":[{"type":"codeVoice","code":"BidirectionalStream"},{"type":"text","text":" aims to bring features similar to Python’s Generator to Swift. Users can generate values using "},{"type":"codeVoice","code":"yield"},{"type":"text","text":", send values back with "},{"type":"codeVoice","code":"send"},{"type":"text","text":", and close the stream by throwing a "},{"type":"codeVoice","code":"StopIteration"},{"type":"text","text":" error."}],"identifier":"doc:\/\/BidirectionalStream\/documentation\/BidirectionalStream","kind":"symbol","type":"topic","url":"\/documentation\/bidirectionalstream"},"doc://BidirectionalStream/documentation/BidirectionalStream/BidirectionalSyncStream/Continuation/throw(error:fileName:functionName:lineNumber:columnNumber:)":{"role":"symbol","title":"throw(error:fileName:functionName:lineNumber:columnNumber:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"`throw`"},{"kind":"text","text":"("},{"kind":"externalParam","text":"error"},{"kind":"text","text":": any "},{"kind":"typeIdentifier","text":"Error","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","text":", "},{"kind":"externalParam","text":"fileName"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"functionName"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"lineNumber"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"columnNumber"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Throws an error to the stream and finishes the stream."},{"type":"text","text":" "},{"type":"text","text":"This is the last call in the stream."}],"identifier":"doc:\/\/BidirectionalStream\/documentation\/BidirectionalStream\/BidirectionalSyncStream\/Continuation\/throw(error:fileName:functionName:lineNumber:columnNumber:)","kind":"symbol","type":"topic","url":"\/documentation\/bidirectionalstream\/bidirectionalsyncstream\/continuation\/throw(error:filename:functionname:linenumber:columnnumber:)"},"doc://BidirectionalStream/documentation/BidirectionalStream/BidirectionalSyncStream/Continuation/return(_:)":{"role":"symbol","title":"return(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"`return`"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"ReturnT"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Returns a value to the stream and finishes the stream."},{"type":"text","text":" "},{"type":"text","text":"This is the last call in the stream."}],"identifier":"doc:\/\/BidirectionalStream\/documentation\/BidirectionalStream\/BidirectionalSyncStream\/Continuation\/return(_:)","kind":"symbol","type":"topic","url":"\/documentation\/bidirectionalstream\/bidirectionalsyncstream\/continuation\/return(_:)"}}}