{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"makeIterator"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","identifier":"doc:\/\/SyncStream\/documentation\/SyncStream\/SyncStream","preciseIdentifier":"s:10SyncStreamAAC","text":"SyncStream"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":">"}],"languages":["swift"],"platforms":["macOS"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/syncstream\/syncstream\/makeiterator()"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/SyncStream\/documentation\/SyncStream\/SyncStream\/makeIterator()","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Inherited from "},{"type":"codeVoice","code":"Sequence.makeIterator()"},{"type":"text","text":"."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"makeIterator"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"SyncStream","preciseIdentifier":"s:10SyncStreamAAC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":">"}],"title":"makeIterator()","roleHeading":"Instance Method","role":"symbol","symbolKind":"method","externalID":"s:10SyncStreamAAC12makeIteratorAByxGyF","modules":[{"name":"SyncStream"}]},"hierarchy":{"paths":[["doc:\/\/SyncStream\/documentation\/SyncStream","doc:\/\/SyncStream\/documentation\/SyncStream\/SyncStream"]]},"references":{"doc://SyncStream/documentation/SyncStream":{"role":"collection","title":"SyncStream","abstract":[{"type":"text","text":"SyncStream Package provides two classes, One is SyncStream which is similar to the swift "},{"type":"codeVoice","code":"AsyncStream"},{"type":"text","text":" but run in synchronous way. The other is "},{"type":"codeVoice","code":"BidirectionalSyncStream"},{"type":"text","text":" which is inspired by the generator in python, have the ability to send values back to the stream."}],"identifier":"doc:\/\/SyncStream\/documentation\/SyncStream","kind":"symbol","type":"topic","url":"\/documentation\/syncstream"},"doc://SyncStream/documentation/SyncStream/SyncStream":{"role":"symbol","title":"SyncStream","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"SyncStream"}],"abstract":[{"type":"text","text":"An synchronous sequence generated from a closure that calls a continuation to produce new elements."}],"identifier":"doc:\/\/SyncStream\/documentation\/SyncStream\/SyncStream","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SyncStream"}],"url":"\/documentation\/syncstream\/syncstream"},"doc://SyncStream/documentation/SyncStream/SyncStream/makeIterator()":{"role":"symbol","title":"makeIterator()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"makeIterator"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"SyncStream","preciseIdentifier":"s:10SyncStreamAAC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":">"}],"abstract":[],"identifier":"doc:\/\/SyncStream\/documentation\/SyncStream\/SyncStream\/makeIterator()","kind":"symbol","type":"topic","url":"\/documentation\/syncstream\/syncstream\/makeiterator()"}}}