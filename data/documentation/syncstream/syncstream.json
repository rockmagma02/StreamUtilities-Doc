{"seeAlsoSections":[{"title":"Class","identifiers":["doc:\/\/SyncStream\/documentation\/SyncStream\/BidirectionalSyncStream"],"generated":true}],"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"SyncStream"}],"title":"SyncStream","roleHeading":"Class","role":"symbol","symbolKind":"class","externalID":"s:10SyncStreamAAC","modules":[{"name":"SyncStream"}],"navigatorTitle":[{"kind":"identifier","text":"SyncStream"}]},"abstract":[{"type":"text","text":"An synchronous sequence generated from a closure that calls a continuation to produce new elements."}],"sections":[],"identifier":{"url":"doc:\/\/SyncStream\/documentation\/SyncStream\/SyncStream","interfaceLanguage":"swift"},"relationshipsSections":[{"identifiers":["doc:\/\/SyncStream\/St","doc:\/\/SyncStream\/ST"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"hierarchy":{"paths":[["doc:\/\/SyncStream\/documentation\/SyncStream"]]},"topicSections":[{"title":"Creating a Continuation-Based Stream","identifiers":["doc:\/\/SyncStream\/documentation\/SyncStream\/SyncStream\/init(_:_:)","doc:\/\/SyncStream\/documentation\/SyncStream\/SyncStream\/init(unfolding:)","doc:\/\/SyncStream\/documentation\/SyncStream\/SyncStream\/Continuation"]},{"title":"Finding Elements","identifiers":["doc:\/\/SyncStream\/documentation\/SyncStream\/SyncStream\/contains(_:)-27qiy","doc:\/\/SyncStream\/documentation\/SyncStream\/SyncStream\/contains(where:)","doc:\/\/SyncStream\/documentation\/SyncStream\/SyncStream\/allSatisfy(_:)","doc:\/\/SyncStream\/documentation\/SyncStream\/SyncStream\/first(where:)","doc:\/\/SyncStream\/documentation\/SyncStream\/SyncStream\/min()-6j4i8","doc:\/\/SyncStream\/documentation\/SyncStream\/SyncStream\/min(by:)","doc:\/\/SyncStream\/documentation\/SyncStream\/SyncStream\/max()-tgdc","doc:\/\/SyncStream\/documentation\/SyncStream\/SyncStream\/max(by:)"]},{"title":"Selecting Elements","identifiers":["doc:\/\/SyncStream\/documentation\/SyncStream\/SyncStream\/prefix(_:)","doc:\/\/SyncStream\/documentation\/SyncStream\/SyncStream\/prefix(while:)"]},{"title":"Extracting Elements","identifiers":["doc:\/\/SyncStream\/documentation\/SyncStream\/SyncStream\/dropFirst(_:)","doc:\/\/SyncStream\/documentation\/SyncStream\/SyncStream\/drop(while:)","doc:\/\/SyncStream\/documentation\/SyncStream\/SyncStream\/filter(_:)"]},{"title":"Transforming a Sequence","identifiers":["doc:\/\/SyncStream\/documentation\/SyncStream\/SyncStream\/map(_:)-hk46","doc:\/\/SyncStream\/documentation\/SyncStream\/SyncStream\/map(_:)-5vrbe","doc:\/\/SyncStream\/documentation\/SyncStream\/SyncStream\/compactMap(_:)-8ap5n","doc:\/\/SyncStream\/documentation\/SyncStream\/SyncStream\/flatMap(_:)-hn8g","doc:\/\/SyncStream\/documentation\/SyncStream\/SyncStream\/reduce(_:_:)-6qftd","doc:\/\/SyncStream\/documentation\/SyncStream\/SyncStream\/reduce(into:_:)-7v0m6"]},{"title":"Instance Methods","identifiers":["doc:\/\/SyncStream\/documentation\/SyncStream\/SyncStream\/makeIterator()","doc:\/\/SyncStream\/documentation\/SyncStream\/SyncStream\/next()"]},{"title":"Type Methods","identifiers":["doc:\/\/SyncStream\/documentation\/SyncStream\/SyncStream\/makeStream(of:)"]},{"title":"Default Implementations","identifiers":["doc:\/\/SyncStream\/documentation\/SyncStream\/SyncStream\/Sequence-Implementations"],"generated":true}],"variants":[{"paths":["\/documentation\/syncstream\/syncstream"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"SyncStream"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Element"},{"kind":"text","text":">"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"Overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"syncstream\/syncstream"},{"type":"text","text":" is inspired by Swift’s "},{"type":"reference","isActive":true,"identifier":"https:\/\/developer.apple.com\/documentation\/swift\/asyncstream"},{"type":"text","text":" and offers a convenient way to generate a sequence using a closure, without the need to implement the "},{"type":"codeVoice","code":"Sequence"},{"type":"text","text":" protocol."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Just like the "},{"overridingTitleInlineContent":[{"type":"codeVoice","code":"AsyncStream"}],"isActive":true,"type":"reference","identifier":"https:\/\/developer.apple.com\/documentation\/swift\/asyncstream","overridingTitle":"AsyncStream"},{"type":"text","text":" , the "},{"overridingTitleInlineContent":[{"type":"text","text":"SyncStream"}],"isActive":true,"type":"reference","identifier":"syncstream\/syncstream","overridingTitle":"SyncStream"},{"type":"text","text":" also utilizes a class called "},{"type":"reference","isActive":true,"identifier":"syncstream\/syncstream\/continuation"},{"type":"text","text":" to manage the production progress. The "},{"overridingTitleInlineContent":[{"type":"text","text":"Continuation"}],"isActive":true,"type":"reference","identifier":"syncstream\/syncstream\/continuation","overridingTitle":"Continuation"},{"type":"text","text":" offers two main methods, "},{"type":"reference","isActive":true,"identifier":"syncstream\/syncstream\/continuation\/yield(_:)"},{"type":"text","text":" and "},{"type":"reference","isActive":true,"identifier":"syncstream\/syncstream\/continuation\/finish()"},{"type":"text","text":", similar to those in the "},{"overridingTitleInlineContent":[{"type":"codeVoice","code":"AsyncStream"}],"isActive":true,"type":"reference","identifier":"https:\/\/developer.apple.com\/documentation\/swift\/asyncstream","overridingTitle":"AsyncStream"},{"type":"text","text":", but operates synchronously. If you are familiar with Python, you can consider the  "},{"overridingTitleInlineContent":[{"type":"text","text":"SyncStream"}],"isActive":true,"type":"reference","identifier":"syncstream\/syncstream","overridingTitle":"SyncStream"},{"type":"text","text":" as a generator."}]},{"type":"codeListing","syntax":"swift","code":["let stream = SyncStream<Int> { continuation in","    for i in 0..<10 {","        continuation.yield(i)","    }","    continuation.finish()","}","","for value in stream {","print(value, terminator: \" \")","}","\/\/ 0 1 2 3 4 5 6 7 8 9"]}]}],"references":{"doc://SyncStream/documentation/SyncStream/SyncStream/map(_:)-5vrbe":{"role":"symbol","title":"map(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"map"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> ["},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"]"}],"abstract":[{"type":"text","text":"Creates an synchronous stream that maps the given throwing closure over the synchronous"},{"type":"text","text":" "},{"type":"text","text":"sequence’s elements."}],"identifier":"doc:\/\/SyncStream\/documentation\/SyncStream\/SyncStream\/map(_:)-5vrbe","kind":"symbol","type":"topic","url":"\/documentation\/syncstream\/syncstream\/map(_:)-5vrbe"},"doc://SyncStream/documentation/SyncStream/SyncStream/contains(where:)":{"role":"symbol","title":"contains(where:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"contains"},{"kind":"text","text":"("},{"kind":"externalParam","text":"where"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Returns a Boolean value that indicates whether the synchronous sequence contains an"},{"type":"text","text":" "},{"type":"text","text":"element that satisfies the given predicate."}],"identifier":"doc:\/\/SyncStream\/documentation\/SyncStream\/SyncStream\/contains(where:)","kind":"symbol","type":"topic","url":"\/documentation\/syncstream\/syncstream\/contains(where:)"},"doc://SyncStream/documentation/SyncStream/SyncStream/prefix(_:)":{"role":"symbol","title":"prefix(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"prefix"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":") -> ["},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":"]"}],"abstract":[{"type":"text","text":"Returns an Array, up to the specified maximum length, containing the initial"},{"type":"text","text":" "},{"type":"text","text":"elements of the base synchronous sequence."}],"identifier":"doc:\/\/SyncStream\/documentation\/SyncStream\/SyncStream\/prefix(_:)","kind":"symbol","type":"topic","url":"\/documentation\/syncstream\/syncstream\/prefix(_:)"},"doc://SyncStream/documentation/SyncStream/SyncStream/first(where:)":{"role":"symbol","title":"first(where:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"first"},{"kind":"text","text":"("},{"kind":"externalParam","text":"where"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Returns the first element of the sequence that satisfies the given predicate."}],"identifier":"doc:\/\/SyncStream\/documentation\/SyncStream\/SyncStream\/first(where:)","kind":"symbol","type":"topic","url":"\/documentation\/syncstream\/syncstream\/first(where:)"},"doc://SyncStream/documentation/SyncStream/SyncStream/makeIterator()":{"role":"symbol","title":"makeIterator()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"makeIterator"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"SyncStream","preciseIdentifier":"s:10SyncStreamAAC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":">"}],"abstract":[],"identifier":"doc:\/\/SyncStream\/documentation\/SyncStream\/SyncStream\/makeIterator()","kind":"symbol","type":"topic","url":"\/documentation\/syncstream\/syncstream\/makeiterator()"},"doc://SyncStream/documentation/SyncStream/SyncStream/Sequence-Implementations":{"role":"collectionGroup","title":"Sequence Implementations","abstract":[],"identifier":"doc:\/\/SyncStream\/documentation\/SyncStream\/SyncStream\/Sequence-Implementations","kind":"article","type":"topic","url":"\/documentation\/syncstream\/syncstream\/sequence-implementations"},"doc://SyncStream/documentation/SyncStream/SyncStream/filter(_:)":{"role":"symbol","title":"filter(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"filter"},{"kind":"text","text":"(("},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"SyncStream","preciseIdentifier":"s:10SyncStreamAAC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Creates an synchronous stream that contains, in order, the elements of the base"},{"type":"text","text":" "},{"type":"text","text":"sequence that satisfy the given predicate."}],"identifier":"doc:\/\/SyncStream\/documentation\/SyncStream\/SyncStream\/filter(_:)","kind":"symbol","type":"topic","url":"\/documentation\/syncstream\/syncstream\/filter(_:)"},"doc://SyncStream/St":{"type":"unresolvable","title":"Swift.IteratorProtocol","identifier":"doc:\/\/SyncStream\/St"},"doc://SyncStream/documentation/SyncStream/SyncStream/init(unfolding:)":{"role":"symbol","title":"init(unfolding:)","fragments":[{"kind":"keyword","text":"convenience"},{"kind":"text","text":" "},{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"unfolding"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"Constructs an synchronous stream from a given element-producing closure."}],"identifier":"doc:\/\/SyncStream\/documentation\/SyncStream\/SyncStream\/init(unfolding:)","kind":"symbol","type":"topic","url":"\/documentation\/syncstream\/syncstream\/init(unfolding:)"},"doc://SyncStream/ST":{"type":"unresolvable","title":"Swift.Sequence","identifier":"doc:\/\/SyncStream\/ST"},"doc://SyncStream/documentation/SyncStream/SyncStream/Continuation":{"role":"symbol","title":"SyncStream.Continuation","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Continuation"}],"abstract":[{"type":"text","text":"A mechanism to interface between synchronous code and a synchronous stream."}],"identifier":"doc:\/\/SyncStream\/documentation\/SyncStream\/SyncStream\/Continuation","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Continuation"}],"url":"\/documentation\/syncstream\/syncstream\/continuation"},"doc://SyncStream/documentation/SyncStream/SyncStream/makeStream(of:)":{"role":"symbol","title":"makeStream(of:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"makeStream"},{"kind":"text","text":"("},{"kind":"externalParam","text":"of"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":".Type) -> (stream"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SyncStream","preciseIdentifier":"s:10SyncStreamAAC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":">, continuation"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SyncStream","preciseIdentifier":"s:10SyncStreamAAC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":">."},{"kind":"typeIdentifier","text":"Continuation","preciseIdentifier":"s:10SyncStreamAAC12ContinuationC"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Constructs an synchronous stream from the Element Type"}],"identifier":"doc:\/\/SyncStream\/documentation\/SyncStream\/SyncStream\/makeStream(of:)","kind":"symbol","type":"topic","url":"\/documentation\/syncstream\/syncstream\/makestream(of:)"},"doc://SyncStream/documentation/SyncStream/SyncStream/reduce(_:_:)-6qftd":{"role":"symbol","title":"reduce(_:_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"reduce"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":", ("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T"}],"abstract":[{"type":"text","text":"Returns the result of combining the elements of the synchronous sequence using the given closure."}],"identifier":"doc:\/\/SyncStream\/documentation\/SyncStream\/SyncStream\/reduce(_:_:)-6qftd","kind":"symbol","type":"topic","url":"\/documentation\/syncstream\/syncstream\/reduce(_:_:)-6qftd"},"syncstream/syncstream/continuation/yield(_:)":{"title":"yield(_:)","titleInlineContent":[{"type":"codeVoice","code":"yield(_:)"}],"type":"link","identifier":"syncstream\/syncstream\/continuation\/yield(_:)","url":"syncstream\/syncstream\/continuation\/yield(_:)"},"doc://SyncStream/documentation/SyncStream/SyncStream/next()":{"role":"symbol","title":"next()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"next"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":"?"}],"abstract":[],"identifier":"doc:\/\/SyncStream\/documentation\/SyncStream\/SyncStream\/next()","kind":"symbol","type":"topic","url":"\/documentation\/syncstream\/syncstream\/next()"},"doc://SyncStream/documentation/SyncStream/SyncStream":{"role":"symbol","title":"SyncStream","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"SyncStream"}],"abstract":[{"type":"text","text":"An synchronous sequence generated from a closure that calls a continuation to produce new elements."}],"identifier":"doc:\/\/SyncStream\/documentation\/SyncStream\/SyncStream","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SyncStream"}],"url":"\/documentation\/syncstream\/syncstream"},"doc://SyncStream/documentation/SyncStream/SyncStream/map(_:)-hk46":{"role":"symbol","title":"map(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"map"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"SyncStream","preciseIdentifier":"s:10SyncStreamAAC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Creates an synchronous stream that maps the given closure over the synchronous sequence’s"},{"type":"text","text":" "},{"type":"text","text":"elements."}],"identifier":"doc:\/\/SyncStream\/documentation\/SyncStream\/SyncStream\/map(_:)-hk46","kind":"symbol","type":"topic","url":"\/documentation\/syncstream\/syncstream\/map(_:)-hk46"},"doc://SyncStream/documentation/SyncStream/SyncStream/contains(_:)-27qiy":{"role":"symbol","title":"contains(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"contains"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Returns a Boolean value that indicates whether the synchronous sequence contains the given element."}],"identifier":"doc:\/\/SyncStream\/documentation\/SyncStream\/SyncStream\/contains(_:)-27qiy","kind":"symbol","type":"topic","url":"\/documentation\/syncstream\/syncstream\/contains(_:)-27qiy"},"doc://SyncStream/documentation/SyncStream/SyncStream/compactMap(_:)-8ap5n":{"role":"symbol","title":"compactMap(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"compactMap"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"SyncStream","preciseIdentifier":"s:10SyncStreamAAC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Returns a SyncStream containing the non-"},{"type":"codeVoice","code":"nil"},{"type":"text","text":" results of calling the given"},{"type":"text","text":" "},{"type":"text","text":"transformation with each element of this sequence."}],"identifier":"doc:\/\/SyncStream\/documentation\/SyncStream\/SyncStream\/compactMap(_:)-8ap5n","kind":"symbol","type":"topic","url":"\/documentation\/syncstream\/syncstream\/compactmap(_:)-8ap5n"},"doc://SyncStream/documentation/SyncStream/SyncStream/init(_:_:)":{"role":"symbol","title":"init(_:_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":".Type, ("},{"kind":"typeIdentifier","text":"SyncStream","preciseIdentifier":"s:10SyncStreamAAC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":">."},{"kind":"typeIdentifier","text":"Continuation","preciseIdentifier":"s:10SyncStreamAAC12ContinuationC"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Constructs an synchronous stream for an element type, using am element-producing closure."}],"identifier":"doc:\/\/SyncStream\/documentation\/SyncStream\/SyncStream\/init(_:_:)","kind":"symbol","type":"topic","url":"\/documentation\/syncstream\/syncstream\/init(_:_:)"},"doc://SyncStream/documentation/SyncStream/SyncStream/dropFirst(_:)":{"role":"symbol","title":"dropFirst(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"dropFirst"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"SyncStream","preciseIdentifier":"s:10SyncStreamAAC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Returns a SyncStream containing the elements of the base synchronous sequence, with"},{"type":"text","text":" "},{"type":"text","text":"the specified number of elements skipped from the beginning."}],"identifier":"doc:\/\/SyncStream\/documentation\/SyncStream\/SyncStream\/dropFirst(_:)","kind":"symbol","type":"topic","url":"\/documentation\/syncstream\/syncstream\/dropfirst(_:)"},"doc://SyncStream/documentation/SyncStream/SyncStream/flatMap(_:)-hn8g":{"role":"symbol","title":"flatMap(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"flatMap"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") -> any "},{"kind":"typeIdentifier","text":"Sequence","preciseIdentifier":"s:ST"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"SyncStream","preciseIdentifier":"s:10SyncStreamAAC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Returns a SyncStream that concatenates the results of calling the given transformation"},{"type":"text","text":" "},{"type":"text","text":"with each element of this sequence."}],"identifier":"doc:\/\/SyncStream\/documentation\/SyncStream\/SyncStream\/flatMap(_:)-hn8g","kind":"symbol","type":"topic","url":"\/documentation\/syncstream\/syncstream\/flatmap(_:)-hn8g"},"doc://SyncStream/documentation/SyncStream/SyncStream/min(by:)":{"role":"symbol","title":"min(by:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"min"},{"kind":"text","text":"("},{"kind":"externalParam","text":"by"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Returns the minimum element in the sequence, using the given predicate as the comparison"},{"type":"text","text":" "},{"type":"text","text":"between elements."}],"identifier":"doc:\/\/SyncStream\/documentation\/SyncStream\/SyncStream\/min(by:)","kind":"symbol","type":"topic","url":"\/documentation\/syncstream\/syncstream\/min(by:)"},"syncstream/syncstream":{"title":"SyncStream","titleInlineContent":[{"type":"text","text":"SyncStream"}],"type":"link","identifier":"syncstream\/syncstream","url":"syncstream\/syncstream"},"doc://SyncStream/documentation/SyncStream/SyncStream/prefix(while:)":{"role":"symbol","title":"prefix(while:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"prefix"},{"kind":"text","text":"("},{"kind":"externalParam","text":"while"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> ["},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":"]"}],"abstract":[{"type":"text","text":"Returns an Array containing the initial elements of the synchronous sequence that"},{"type":"text","text":" "},{"type":"text","text":"satisfy the given predicate."}],"identifier":"doc:\/\/SyncStream\/documentation\/SyncStream\/SyncStream\/prefix(while:)","kind":"symbol","type":"topic","url":"\/documentation\/syncstream\/syncstream\/prefix(while:)"},"doc://SyncStream/documentation/SyncStream":{"role":"collection","title":"SyncStream","abstract":[{"type":"text","text":"SyncStream Package provides two classes, One is SyncStream which is similar to the swift "},{"type":"codeVoice","code":"AsyncStream"},{"type":"text","text":" but run in synchronous way. The other is "},{"type":"codeVoice","code":"BidirectionalSyncStream"},{"type":"text","text":" which is inspired by the generator in python, have the ability to send values back to the stream."}],"identifier":"doc:\/\/SyncStream\/documentation\/SyncStream","kind":"symbol","type":"topic","url":"\/documentation\/syncstream"},"doc://SyncStream/documentation/SyncStream/SyncStream/allSatisfy(_:)":{"role":"symbol","title":"allSatisfy(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"allSatisfy"},{"kind":"text","text":"(("},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Returns a Boolean value that indicates whether every element of a synchronous sequence"},{"type":"text","text":" "},{"type":"text","text":"satisfies a given predicate."}],"identifier":"doc:\/\/SyncStream\/documentation\/SyncStream\/SyncStream\/allSatisfy(_:)","kind":"symbol","type":"topic","url":"\/documentation\/syncstream\/syncstream\/allsatisfy(_:)"},"syncstream/syncstream/continuation/finish()":{"title":"finish","titleInlineContent":[{"type":"codeVoice","code":"finish"}],"type":"link","identifier":"syncstream\/syncstream\/continuation\/finish()","url":"syncstream\/syncstream\/continuation\/finish()"},"doc://SyncStream/documentation/SyncStream/SyncStream/reduce(into:_:)-7v0m6":{"role":"symbol","title":"reduce(into:_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"reduce"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"into"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":", ("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T"}],"abstract":[{"type":"text","text":"Returns the result of combining the elements of the synchronous sequence using the given"},{"type":"text","text":" "},{"type":"text","text":"closure, given a mutable initial value."}],"identifier":"doc:\/\/SyncStream\/documentation\/SyncStream\/SyncStream\/reduce(into:_:)-7v0m6","kind":"symbol","type":"topic","url":"\/documentation\/syncstream\/syncstream\/reduce(into:_:)-7v0m6"},"https://developer.apple.com/documentation/swift/asyncstream":{"title":"AsyncStream","titleInlineContent":[{"type":"codeVoice","code":"AsyncStream"}],"type":"link","identifier":"https:\/\/developer.apple.com\/documentation\/swift\/asyncstream","url":"https:\/\/developer.apple.com\/documentation\/swift\/asyncstream"},"doc://SyncStream/documentation/SyncStream/SyncStream/min()-6j4i8":{"role":"symbol","title":"min()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"min"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Returns the minimum element in the sequence."}],"identifier":"doc:\/\/SyncStream\/documentation\/SyncStream\/SyncStream\/min()-6j4i8","kind":"symbol","type":"topic","url":"\/documentation\/syncstream\/syncstream\/min()-6j4i8"},"doc://SyncStream/documentation/SyncStream/SyncStream/max(by:)":{"role":"symbol","title":"max(by:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"max"},{"kind":"text","text":"("},{"kind":"externalParam","text":"by"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Returns the maximum element in the sequence, using the given predicate as the comparison"},{"type":"text","text":" "},{"type":"text","text":"between elements."}],"identifier":"doc:\/\/SyncStream\/documentation\/SyncStream\/SyncStream\/max(by:)","kind":"symbol","type":"topic","url":"\/documentation\/syncstream\/syncstream\/max(by:)"},"doc://SyncStream/documentation/SyncStream/SyncStream/max()-tgdc":{"role":"symbol","title":"max()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"max"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Returns the maximum element in the sequence."}],"identifier":"doc:\/\/SyncStream\/documentation\/SyncStream\/SyncStream\/max()-tgdc","kind":"symbol","type":"topic","url":"\/documentation\/syncstream\/syncstream\/max()-tgdc"},"syncstream/syncstream/continuation":{"title":"Continuation","titleInlineContent":[{"type":"text","text":"Continuation"}],"type":"link","identifier":"syncstream\/syncstream\/continuation","url":"syncstream\/syncstream\/continuation"},"doc://SyncStream/documentation/SyncStream/SyncStream/drop(while:)":{"role":"symbol","title":"drop(while:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"drop"},{"kind":"text","text":"("},{"kind":"externalParam","text":"while"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"SyncStream","preciseIdentifier":"s:10SyncStreamAAC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Returns a SyncStream containing the elements of the base synchronous sequence, with"},{"type":"text","text":" "},{"type":"text","text":"the initial elements omitted until the predicate returns "},{"type":"codeVoice","code":"false"},{"type":"text","text":"."}],"identifier":"doc:\/\/SyncStream\/documentation\/SyncStream\/SyncStream\/drop(while:)","kind":"symbol","type":"topic","url":"\/documentation\/syncstream\/syncstream\/drop(while:)"},"doc://SyncStream/documentation/SyncStream/BidirectionalSyncStream":{"role":"symbol","title":"BidirectionalSyncStream","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"BidirectionalSyncStream"}],"abstract":[{"type":"text","text":"A mechanism inspired by Python’s generator to allow for bidirectional communication between two"},{"type":"text","text":" "},{"type":"text","text":"parties. One party can yield a value and the other party can send a value back."}],"identifier":"doc:\/\/SyncStream\/documentation\/SyncStream\/BidirectionalSyncStream","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"BidirectionalSyncStream"}],"url":"\/documentation\/syncstream\/bidirectionalsyncstream"}}}