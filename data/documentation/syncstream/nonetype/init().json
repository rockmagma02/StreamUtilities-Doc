{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"init"},{"kind":"text","text":"()"}],"languages":["swift"],"platforms":["macOS"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/syncstream\/nonetype\/init()"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/SyncStream\/documentation\/SyncStream\/NoneType\/init()","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Creates a new "},{"type":"codeVoice","code":"NoneType"},{"type":"text","text":"."}],"kind":"symbol","metadata":{"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"()"}],"title":"init()","roleHeading":"Initializer","role":"symbol","symbolKind":"init","externalID":"s:10SyncStream8NoneTypeVACycfc","modules":[{"name":"SyncStream"}]},"hierarchy":{"paths":[["doc:\/\/SyncStream\/documentation\/SyncStream","doc:\/\/SyncStream\/documentation\/SyncStream\/BidirectionalSyncStream","doc:\/\/SyncStream\/documentation\/SyncStream\/NoneType"]]},"references":{"doc://SyncStream/documentation/SyncStream/NoneType/init()":{"role":"symbol","title":"init()","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Creates a new "},{"type":"codeVoice","code":"NoneType"},{"type":"text","text":"."}],"identifier":"doc:\/\/SyncStream\/documentation\/SyncStream\/NoneType\/init()","kind":"symbol","type":"topic","url":"\/documentation\/syncstream\/nonetype\/init()"},"doc://SyncStream/documentation/SyncStream":{"role":"collection","title":"SyncStream","abstract":[{"type":"text","text":"SyncStream Package provides two classes, One is SyncStream which is similar to the swift "},{"type":"codeVoice","code":"AsyncStream"},{"type":"text","text":" but run in synchronous way. The other is "},{"type":"codeVoice","code":"BidirectionalSyncStream"},{"type":"text","text":" which is inspired by the generator in python, have the ability to send values back to the stream."}],"identifier":"doc:\/\/SyncStream\/documentation\/SyncStream","kind":"symbol","type":"topic","url":"\/documentation\/syncstream"},"doc://SyncStream/documentation/SyncStream/BidirectionalSyncStream":{"role":"symbol","title":"BidirectionalSyncStream","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"BidirectionalSyncStream"}],"abstract":[{"type":"text","text":"A mechanism inspired by Pythonâ€™s generator to allow for bidirectional communication between two"},{"type":"text","text":" "},{"type":"text","text":"parties. One party can yield a value and the other party can send a value back."}],"identifier":"doc:\/\/SyncStream\/documentation\/SyncStream\/BidirectionalSyncStream","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"BidirectionalSyncStream"}],"url":"\/documentation\/syncstream\/bidirectionalsyncstream"},"doc://SyncStream/documentation/SyncStream/NoneType":{"role":"symbol","title":"NoneType","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"NoneType"}],"abstract":[{"type":"text","text":"A type to represent "},{"type":"codeVoice","code":"None"},{"type":"text","text":" in Python."}],"identifier":"doc:\/\/SyncStream\/documentation\/SyncStream\/NoneType","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"NoneType"}],"url":"\/documentation\/syncstream\/nonetype"}}}