{"seeAlsoSections":[{"title":"Building a BidirectionalSyncStream","identifiers":["doc:\/\/SyncStream\/documentation\/SyncStream\/BidirectionalSyncStream\/init(_:_:_:_:)"],"generated":true}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Continuation"}],"languages":["swift"],"platforms":["macOS"]}]}],"variants":[{"paths":["\/documentation\/syncstream\/bidirectionalsyncstream\/continuation"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/SyncStream\/documentation\/SyncStream\/BidirectionalSyncStream\/Continuation","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"A continuation of the "},{"type":"codeVoice","code":"BidirectionalSyncStream"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"It is used to communicate between the two parties."}],"kind":"symbol","metadata":{"navigatorTitle":[{"kind":"identifier","text":"Continuation"}],"role":"symbol","title":"BidirectionalSyncStream.Continuation","roleHeading":"Class","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Continuation"}],"symbolKind":"class","externalID":"s:10SyncStream013BidirectionalaB0C12ContinuationC","extendedModule":"SyncStream","modules":[{"name":"SyncStream"}]},"hierarchy":{"paths":[["doc:\/\/SyncStream\/documentation\/SyncStream","doc:\/\/SyncStream\/documentation\/SyncStream\/BidirectionalSyncStream"]]},"topicSections":[{"title":"Instance Methods","identifiers":["doc:\/\/SyncStream\/documentation\/SyncStream\/BidirectionalSyncStream\/Continuation\/return(_:)","doc:\/\/SyncStream\/documentation\/SyncStream\/BidirectionalSyncStream\/Continuation\/yield(_:)"]}],"references":{"doc://SyncStream/documentation/SyncStream/BidirectionalSyncStream/Continuation":{"role":"symbol","title":"BidirectionalSyncStream.Continuation","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Continuation"}],"abstract":[{"type":"text","text":"A continuation of the "},{"type":"codeVoice","code":"BidirectionalSyncStream"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"It is used to communicate between the two parties."}],"identifier":"doc:\/\/SyncStream\/documentation\/SyncStream\/BidirectionalSyncStream\/Continuation","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Continuation"}],"url":"\/documentation\/syncstream\/bidirectionalsyncstream\/continuation"},"doc://SyncStream/documentation/SyncStream/BidirectionalSyncStream":{"role":"symbol","title":"BidirectionalSyncStream","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"BidirectionalSyncStream"}],"abstract":[{"type":"text","text":"A mechanism inspired by Pythonâ€™s generator to allow for bidirectional communication between two"},{"type":"text","text":" "},{"type":"text","text":"parties. One party can yield a value and the other party can send a value back."}],"identifier":"doc:\/\/SyncStream\/documentation\/SyncStream\/BidirectionalSyncStream","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"BidirectionalSyncStream"}],"url":"\/documentation\/syncstream\/bidirectionalsyncstream"},"doc://SyncStream/documentation/SyncStream/BidirectionalSyncStream/Continuation/yield(_:)":{"role":"symbol","title":"yield(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"yield"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"YieldT"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"SendT"}],"abstract":[{"type":"text","text":"Yields a value to the stream and waits for a value to be sent back."}],"identifier":"doc:\/\/SyncStream\/documentation\/SyncStream\/BidirectionalSyncStream\/Continuation\/yield(_:)","kind":"symbol","type":"topic","url":"\/documentation\/syncstream\/bidirectionalsyncstream\/continuation\/yield(_:)"},"doc://SyncStream/documentation/SyncStream":{"role":"collection","title":"SyncStream","abstract":[{"type":"text","text":"SyncStream Package provides two classes, One is SyncStream which is similar to the swift "},{"type":"codeVoice","code":"AsyncStream"},{"type":"text","text":" but run in synchronous way. The other is "},{"type":"codeVoice","code":"BidirectionalSyncStream"},{"type":"text","text":" which is inspired by the generator in python, have the ability to send values back to the stream."}],"identifier":"doc:\/\/SyncStream\/documentation\/SyncStream","kind":"symbol","type":"topic","url":"\/documentation\/syncstream"},"doc://SyncStream/documentation/SyncStream/BidirectionalSyncStream/init(_:_:_:_:)":{"role":"symbol","title":"init(_:_:_:_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"YieldT"},{"kind":"text","text":".Type, "},{"kind":"typeIdentifier","text":"SendT"},{"kind":"text","text":".Type, "},{"kind":"typeIdentifier","text":"ReturnT"},{"kind":"text","text":".Type, ("},{"kind":"typeIdentifier","text":"BidirectionalSyncStream","preciseIdentifier":"s:10SyncStream013BidirectionalaB0C"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"YieldT"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"SendT"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"ReturnT"},{"kind":"text","text":">."},{"kind":"typeIdentifier","text":"Continuation","preciseIdentifier":"s:10SyncStream013BidirectionalaB0C12ContinuationC"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Creates a new "},{"type":"codeVoice","code":"BidirectionalSyncStream"},{"type":"text","text":"."}],"identifier":"doc:\/\/SyncStream\/documentation\/SyncStream\/BidirectionalSyncStream\/init(_:_:_:_:)","kind":"symbol","type":"topic","url":"\/documentation\/syncstream\/bidirectionalsyncstream\/init(_:_:_:_:)"},"doc://SyncStream/documentation/SyncStream/BidirectionalSyncStream/Continuation/return(_:)":{"role":"symbol","title":"return(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"`return`"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"ReturnT"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Returns a value to the stream and finishes the stream."},{"type":"text","text":" "},{"type":"text","text":"This is the last call in the stream."}],"identifier":"doc:\/\/SyncStream\/documentation\/SyncStream\/BidirectionalSyncStream\/Continuation\/return(_:)","kind":"symbol","type":"topic","url":"\/documentation\/syncstream\/bidirectionalsyncstream\/continuation\/return(_:)"}}}